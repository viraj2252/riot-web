version: '2'
volumes:
  postgres_data: {}
  postgres_backup: {}
  static: {}
  media: {}

services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"
    networks:
      - proxy-tier

  nginx-gen:
    restart: always
    build: ./nginx-gen
    container_name: nginx-gen
    depends_on:
      - nginx
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-companion
    depends_on:
      - nginx
      - nginx-gen
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
  
  riotweb:
    container_name: riotweb-v3
    build: 
      context: .
      dockerfile: apache.dockerfile
    restart: unless-stopped
    volumes:
      - "./riotv2/conf.d/:/etc/nginx/conf.d"
    environment:
      - VIRTUAL_HOST=chat.tenx.tech
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=chat.tenx.tech
      - LETSENCRYPT_EMAIL=vj@tenx.tech
    networks:
      - proxy-tier

networks:
  proxy-tier:
    external:
      name: nginx-proxy